# Generated by Django 5.2.6 on 2025-09-18 16:11

import django.core.validators
import django.db.models.expressions
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('sensors', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ExempleModele',
            fields=[
                ('identifiant', models.BigAutoField(help_text='Clé primaire auto-incrémentée', primary_key=True, serialize=False)),
                ('entier_long', models.BigIntegerField(blank=True, db_index=True, help_text='Nombre entier de grande taille', null=True)),
                ('entier', models.IntegerField(default=0, help_text='Entier compris entre 0 et 100', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('petit_entier', models.SmallIntegerField(blank=True, null=True)),
                ('entier_positif_long', models.PositiveBigIntegerField(blank=True, null=True)),
                ('entier_positif', models.PositiveIntegerField(blank=True, null=True)),
                ('petit_entier_positif', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('reel', models.FloatField(blank=True, null=True)),
                ('decimal', models.DecimalField(decimal_places=2, default=0.0, help_text='Nombre décimal avec 2 chiffres après la virgule', max_digits=10)),
                ('nom_unique', models.CharField(error_messages={'unique': 'Ce nom existe déjà !'}, help_text='Texte court et unique', max_length=100, unique=True, verbose_name='Nom unique')),
                ('texte_long', models.TextField(blank=True, null=True)),
                ('identifiant_url', models.SlugField(help_text='Slug (identifiant lisible dans l’URL)', unique=True)),
                ('courriel', models.EmailField(blank=True, help_text='Adresse de courrier électronique', max_length=254)),
                ('site_web', models.URLField(blank=True, null=True)),
                ('identifiant_uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('donnees_binaires', models.BinaryField(blank=True, null=True)),
                ('fichier', models.FileField(blank=True, null=True, upload_to='uploads/fichiers/')),
                ('image', models.ImageField(blank=True, null=True, upload_to='uploads/images/')),
                ('chemin_fichier', models.FilePathField(blank=True, null=True, path='/tmp')),
                ('date_simple', models.DateField(blank=True, help_text='Date simple', null=True, unique_for_date='date_simple')),
                ('date_et_heure', models.DateTimeField(auto_now_add=True, help_text='Date et heure d’ajout (non modifiable)')),
                ('heure', models.TimeField(blank=True, null=True)),
                ('duree', models.DurationField(blank=True, null=True)),
                ('est_actif', models.BooleanField(default=False, help_text='Valeur booléenne (vrai/faux)')),
                ('donnees_json', models.JSONField(default=dict, help_text='Stockage de données JSON')),
                ('adresse_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('valeur_calculee', models.GeneratedField(db_persist=True, expression=django.db.models.expressions.CombinedExpression(models.F('entier'), '*', models.Value(2)), help_text='Champ généré automatiquement (entier * 2)', output_field=models.IntegerField())),
                ('choix', models.CharField(choices=[('A', 'Option A'), ('B', 'Option B')], default='A', help_text='Champ avec des choix prédéfinis', max_length=10)),
            ],
        ),
    ]
